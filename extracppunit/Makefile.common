### list of generated xml result files by CPPUnit tests
xml_results=$(TESTS:${EXEEXT}=_results.xml)

# When the clean is issued, the generated result files should be erased
#CLEANFILES= $(xml_results)
CLEANFILES= *_results.xml
	
# In case the CPPUnit test cannot be run the result file
# will not be generated, so we will create first an error
# result file that will be overwritten by the CPPUnit test
# when it will be run.
#
# Some convention have to be followed to have this system
# to work. The following entities need to have the same name:
# - cpp file that contain the main CCPUnit function
# - testSuite that will be run
# - binary generated to run the scenario
#
# Here we want to create the xml files before the check-TESTS,
# The only solution I found for that, is to make the check-am
# dependent of the xml result file target
check-am: $(xml_results)
.PHONY: $(xml_results)
$(xml_results):
	@echo "Generating failure xml report..."
	@echo "<?xml version='1.0' encoding='ISO-8859-1' standalone='yes' ?>" \
		"<TestRun>" \
		"  <FailedTests>" \
		"    <FailedTest id='1'>" \
		"      <Name>$(@:_results.xml=)::unknown</Name>" \
		"      <FailureType>Unknown</FailureType>" \
		"      <Location>" \
		"        <File>$(@:_results.xml=.cpp)</File>" \
		"        <Line>-1</Line>" \
		"      </Location>" \
		"      <Message>Cannot run the test</Message>" \
		"    </FailedTest>" \
		"  </FailedTests>" \
		"  <SuccessfulTests/>" \
		"  <Statistics>" \
		"    <Tests>0</Tests>" \
		"    <FailuresTotal>1</FailuresTotal>" \
		"    <Errors>1</Errors>" \
		"    <Failures>0</Failures>" \
		"  </Statistics>" \
		"</TestRun>" \
		> $@ ;